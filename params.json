{
  "name": "Android-browser-from-chromium",
  "tagline": "chromium for android 下载和编译",
  "body": "   最近有做基于chromium的android浏览器的需求，首先得下载chromium for android源码。\r\n   一、lantern翻墙\r\n   1、基于现在国内网络环境，为了访问国外的一些网站，需翻墙，现在用的lantern(Win,Mac和linux都有版本)，可在其官网下载对应版本（https://www.getlantern.org/），安装好后运行会在浏览器弹出一个页面，此时应该可以直接进入google了（据说需要有chrome内核的浏览器才能顺利越狱，没有尝试把所有chrome内核的浏览器都删除过）\r\n   2、Ubuntu下配置蓝灯代理：\r\n      终端输入命令：gedit ~/.bashrc \r\n      最后加入两行：\r\n      export http_proxy=127.0.0.1:8787\r\n      export https_proxy=127.0.0.1:8787\r\n在源码下载过程中有中断情况，加入代理配置会好些，具体原因未深究。\r\n    二、下载配置Depot tools\r\n    在终端输入命令：\r\n    git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\r\n会下载Depot tools到你的用户名目录下，接着将Depot tools文件夹路径添加到环境变量中。\r\n    三、下载源码\r\n    1、创建一个放源码的目录，并在终端定位到次目录，然后执行命令：fetch android，会生成一个.glient文件和一个Src文件夹，官网中说接下来要执行$ cd src && ./build/install-build-deps.sh命令，应该是要安装一些编译是依赖的文件\r\n    2、接着执行命令gclient sync，此过程可以要很久，过程中还遇到了中断情况，应该是蓝灯没有在环境变量中配置，注意需在.gclient所在目录下执行该命令。\r\n    四、编译源码\r\n    1.配置环境变量,一般都安装好了，可不执行\r\n      gedit /etc/profile\r\n      在文件最后加入\r\n    PATH=$PATH:~/tools/depot_tools:~/code/chromium/src/third_party/android_tools/sdk/            build_tools/23.0.1:~/code/chromium/src/third_party/android_tools/sdk/platform-tools\r\n    (路径需替换为实际路径)\r\n    2.有两种工程生成方式：GYP与GN，这里使用GN构建工程\r\n    gn args out/Default\r\n    会打开一个vi，在该文件中设置编译选项如下（可参考https://www.chromium.org/developers/gn-build-configuration）\r\n\ttarget_os = \"android\"\r\n\ttarget_cpu = \"arm\"  # (default)\r\n\ts_debug = true  # (default)\r\n\r\n\t# Other args you may want to set:\r\n\tis_component_build = true\r\n\tis_clang = true\r\n\tsymbol_level = 1  # Faster build with fewer symbols. -g1 rather than -g2\r\n\tenable_incremental_javac = true  # Much faster; experimental\r\n    保存退出后会自动开始生成工程\r\n\r\n    3.安装编译工具链\r\n    ./build/install-build-deps-android.sh \r\n    4.编译\r\n    需在源码目录下执行命令：\r\n    . build/android/envsetup.sh （注意前面有个点，不能漏）\r\n    CHROMIUM_OUTPUT_DIR=$gndir build/android/adb_install_apk.py $gndir/apks/ChromePublic.apk\r\n\r\n    ninja -C out/Default chrome_public_apk\r\n    5、编译所遇问题：\r\n   (1)以上流程都是下载的最新代码，在编译最后会提示缺少文件之类的错误，可以手动添加空文件到提示目录，或者还原代码到特定的稳定版本,我采用添加文件的方式编译出来的apk安装到手机后，打开直播吧网页，网页崩溃了，不知道是不是这个原因导致，如想回退到特定版本可执行类似如下命令：\r\n    gclient sync --nohooks -r 7a9553764fb4e76ef63305d51e9e7a2e60bc24bb\r\n后面很长的字符串是哈希码。\r\n   (2)如果遇到报错：\r\nWarning: library class android.webkit.WebView depends on program class android.net.http.SslCertificate\r\nWarning: library class android.webkit.WebView depends on program class android.net.http.SslCertificate\r\nWarning: there were 2 instances of library classes depending on program classes.\r\n         You must avoid such dependencies, since the program classes will\r\n         be processed, while the library classes will remain unchanged.\r\n         (http://proguard.sourceforge.net/manual/troubleshooting.html#dependency)\r\nError: Please correct the above warnings first.\r\n\r\n解决方法：文本编辑器打开src/out/Default/gen/chrome/android/chrome_public_apk/chrome_public_apk.resources.proguard.txt,在最后加入\r\n-keep public class android.net.http.SslError\r\n-keep public class android.webkit.WebViewClient\r\n-dontwarn android.webkit.WebView\r\n-dontwarn android.net.http.SslError\r\n-dontwarn android.webkit.WebViewClient\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}